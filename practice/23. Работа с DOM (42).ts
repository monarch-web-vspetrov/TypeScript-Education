const pageInput = document.querySelector("#1") as HTMLInputElement;
pageInput?.value;
// При работе с дом надо укзаывать корректные ноды для хранения переменных чтобы тайпскрипт корректно отрабатывал их свойства
// Общим для всех будет HTMLElement все остальные экстендят его и добавляют специфические свойства.
const ref = document.querySelector("a");

// Для более безопасной работы с элементами нужно проверять есть ли искомый эелемент и тогда свойства не надо будет помечать необязательными
if (ref) {
  ref.href = "";
}

// в большинстве случаев ты будешь искать элементы не по их тегам,а по их айди или классам. В таких случаях интерфейс не будет автоматически применяться к переменной

// const p = document.getElementById("3");
// найден элемент но к нему применился общий интерфейс для HTML элемента
const p = document.getElementById("3") as HTMLParagraphElement; // теперь интерфейс применне корректно

// Получение нескольких элементов
// const links = document.querySelectorAll("a") as HTMLElement; Так делать не получится, так как мы получаем массив узлов.
// Чтобы утвердить тип для каждого эелемнта в массиве придется каждому элементру утверждать тип отдельно

// *  Методы

const elem = document.createElement("a"); // ТС подставляет автоматически интерфейс так как указан конкретный тэг

// ? проставляется так как не выполнена проверка на наличие элемента
ref?.addEventListener("click", (e) => {
  // на ивент также накладывается интерфейс
  e.preventDefault();
});
